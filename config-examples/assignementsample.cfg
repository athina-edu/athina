[main]
# Auth token can be generated through Canvas profile page
auth_token = 

# Obtain from browser URL field
course_id = 1169436

# Obtain from browser URL field
assignment_id = 3826091

# A command for testing whatever files exist in the user's repo.
# Tests are independent and no information carries over (all directories reset to the repo state).
# The test are executed from within the athina_test_dir so can be invoked directly in the list without absolute paths
# Scripts can return multiple lines but the last line should always have a float score with max 100
# points. e.g.,     
#    echo "No *.py files found or \n no readable python code found"
#    echo 0
#    exit
test_scripts = [
        "bash test-score-bats.bash",
        "bash test-python-clarity.bash"
        ]
test_weights = [0.7,0.3]

# Total points for the assignment. This can also be used for scaling, e.g., 80% of total points
total_points = 80

# if true then we enforce it otherwise it is ignored
enforce_due_date = true

# Moss plagiarism checking
moss_id = 
moss_lang = python

# Files to look for within the directory
moss_pattern = *.py

# If turned true, athina won't look for a repository submission
# Instead it will just ran the test script and pass the user's identifier as a command line parameter
no_repo = false
# How often should the grade be updated in hours. This applies only for no repository (no_repo) testing.
grade_update_frequency = 24

# Git credentials
# ATHINA will submit these only if the git repository is gitlab.cs.wwu.edu
# If special characters are included in username or password, they need to be escaped, e.g., @ becomes %%40
git_username = 
git_password = 

# The following can allow the same git url to be submitted by two or more students in cases of group assignments
# value of 1 means individual assignments
same_url_limit = 1

# Hour of the clock where plagiarism checks will run. 24-hour value
# This is for once a day and will check this for any user that received a new grade 24 hours ago
check_plagiarism_hour = 1

# Submit results from tests as an attachment file in the comment, or
# if false, submit the results printed by the tests as a comment (can be really large after repeated comments)
submit_results_as_file = True

# Max file size (text) per test to be uploaded as a report (in Kilobytes)
max_file_size = 1024

# Active directory where student assignments are executed from.
# This is to prevent student code from accessing git repo information,
# including user:pass in case repo was cloned through https
# The default option should work for most cases and you do not need to change this.
athina_tmp_dir = /tmp/athina

# Time to allow for tests to run before terminating them (in seconds)
test_timeout = 300

# Whether each test should receive an additional command line parameters: user secondary id and due data
pass_extra_params = false

# Print debug msgs (this prints a bunch of stuff that you do not need to see unless you are debugging)
print_debug_msgs = false